---
description: Vehicle Schema Design Guidelines
globs: ["CPA/src/server/api/routers/vehicle.ts", "CPA/src/lib/api/domains/vehicles/**/*"]
alwaysApply: true
---
# Vehicle Schema Design Guidelines

## Core Principles

1. **Vehicles are Claim-Specific**: Each claim creates a new vehicle record, even if it's the same physical vehicle as another claim
2. **No Unique Constraints on Vehicle Identifiers**: VIN, registration numbers, and engine numbers should NOT have unique constraints
3. **Multiple Claims Per Vehicle**: The same physical vehicle can have multiple claims over time

## Database Design

The `vehicles` table should:

- NOT have unique constraints on `vin`, `registration_number`, or `engine_number`
- Have a required `make` field
- Store basic vehicle information relevant to the claim
- Be linked to exactly one claim

## Implementation Notes

When creating a new claim:
- Always create a new vehicle record
- Do not attempt to reuse existing vehicle records
- Ensure at least one identifier (VIN, registration number, or engine number) is provided

## Validation Rules

- Vehicle make is required
- At least one identifier (VIN, registration number, or engine number) is required
- Year should be between 1900 and the current year (if provided)
- All other fields are optional

## Relationship with Claims

- Each vehicle is associated with exactly one claim
- Each claim must have exactly one vehicle
- The relationship is enforced at the database level with a foreign key constraint
- Vehicles are NOT directly associated with clients - the relationship is always through a claim
